name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  TURBO_API: http://127.0.0.1:9080
  TURBO_TOKEN: this-is-not-a-secret
  TURBO_TEAM: myself

jobs:
  setup:
    name: 'Setup'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: wyvox/action@v1
      - run:  echo ${{ github.event.number }} > ./pr-number.txt
      - id: set-matrix
        run: |
          echo "matrix=$(pnpm -s try list)" >> $GITHUB_OUTPUT

  # Every PR will need linting. Turbo's cache can optimize per-package
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 5
    steps:
      - uses: wyvox/action@v1
      - run: pnpm build
      - run: pnpm lint


  test:
    name: "Default Tests"
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 10
    steps:
      - uses: wyvox/action@v1
      - run: pnpm build
      - run: pnpm test

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 10
    steps:
      - uses: wyvox/action@v1
        with:
          pnpm-args: --no-lockfile
      - run: pnpm build
      - run: pnpm test

  compatibility:
    needs: ["setup"]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}

    name: "${{ matrix.name }}"

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
      - run: pnpm try apply ${{ matrix.name }}
      - run: pnpm install --no-lockfile
      - run: pnpm test
        env: ${{ matrix.env }}

  # NOTE: Docs' types don't need checking because we check types in the
  #       Lint phase up above
  #       This job is for checking specific versions of typescript
  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [test]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@5.5
          - typescript@5.6
          - typescript@5.7
          - typescript@5.8
          - typescript@rc
          - typescript@next

    steps:
      - uses: wyvox/action@v1
      - run: pnpm build
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
      - name: 'Type checking'
        run: pnpm lint:types

  # DeployProduction:
  #   name: "Deploy: Production"
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   needs: [setup]
  #   strategy:
  #     matrix:
  #       app:
  #       - { path: "dist-app", cloudflareName: "ember-primitives", name: "docs" }
  #
  #
  #   permissions:
  #     contents: read
  #     deployments: write
  #
  #   steps:
  #     - uses: wyvox/action@v1
  #       with:
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}
  #     - run: pnpm build
  #     - run: pnpm i -f # sync for some reason isn't running before lint
  #     - run: pnpm build --filter docs-api
  #     - run: pnpm i -f # sync for some reason isn't running before lint
  #     - run: pnpm ember build
  #       working-directory: docs-app
  #     - name: Publish ${{ matrix.app.id }}
  #       uses: cloudflare/pages-action@v1.5.0
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  #         projectName: ${{ matrix.app.cloudflareName }}
  #         directory: ${{ matrix.app.path }}
  #         gitHubToken: ${{ secrets.GITHUB_TOKEN }}
  #
  #
